<?php
/**
 * Renders a horizontal form with side columns
 */
$isMultiple = empty($isSingle) ? true : false;
/*
 * Message at form top
 */
$hiddenMessages = $form->getHiddenMessages();
if ($hiddenMessages) {
?>
    <div class="alert alert-danger">
        <?php
        if (!empty($hiddenMessages['security'])) {
            foreach ($hiddenMessages['security'] as $elMessage) {
                echo '<p>' . $elMessage . '</p>';
            }
            unset($hiddenMessages['security']);
        }
        ?>

        <?php foreach ($hiddenMessages as $elName => $elMessages) { ?>
            <h4><?php echo $elName; ?></h4>
            <ol>
                <?php
                foreach ($elMessages as $elMessage) {
                    echo '<li>' . $elMessage;
                }
                ?>
            </ol>
        <?php } ?>
    </div>
<?php
}
$formClass = 'form-horizontal';
$form->prepare();
$form->setAttribute('class', $formClass);
echo $this->form()->openTag($form);

/**#@+
 * Preparation
 */
$elements   = $form->elementList();
$validate   = $form->getMessages();
$groups     = $form->getGroups();
$this->FormElementErrors()->setMessageOpenFormat('')->setMessageCloseString('');
/**#@-**/

/**#@++
 * Temporary function for element display
 */
$emptyControl = array('checkbox', 'multi_checkbox', 'radio', 'file');
$markRequired = '<i class="text-danger" style="margin-right: 5px;">*</i>';
$renderElement = function ($element) use ($markRequired, $emptyControl, $isMultiple) {
    $type = $element->getAttribute('type') ? : 'text';
    $isEmptyControl = in_array($type, $emptyControl);
    $isCheckbox = $type == 'checkbox';
    $desc = $element->getAttribute('description');

    if (!$isEmptyControl) {
        $class      = $element->getAttribute('class');
        $attrClass  = 'form-control' . ($class ? ' ' . $class : '');
        $element->setAttribute('class', $attrClass);
    }

    $labelClass = $isMultiple ? 'col-md-2' : 'col-sm-3 col-lg-2';
    $rendered = sprintf(
        '<div class="form-group%s"><label class="%s control-label">%s%s</label>',
        $element->getMessages() ? ' has-error' : '',
        $labelClass,
        $element->getAttribute('required') ? $markRequired : '',
        $isCheckbox ?  '' : $element->getLabel()
    );

    if ($isMultiple) {
        $rendered .= sprintf(
            '<div class="col-md-4">%s%s</div><div class="col-md-4 help-block">%s</div></div>',
            $this->formElement($element),
            $desc && !$isCheckbox ? '<div class="text-muted">' . $desc . '</div>' : '',
            $this->formElementErrors($element)
        );
    } else {
        if ($type == 'multi_checkbox') {
            $rendered .= sprintf(
                '<div class="col-sm-9">%s<div class="help-block">%s</div></div></div>',
                $this->formElement($element),
                $this->formElementErrors($element)
            );
        } else {
            $rendered .= sprintf(
                '<div class="col-sm-5 js-form-element">%s%s</div><div class="col-sm-4 help-block">%s</div></div>',
                $this->formElement($element),
                $desc && !$isCheckbox ? '<div class="text-muted">' . $desc . '</div>' : '',
                $this->formElementErrors($element)
            );
        }
    }

    echo $rendered;
};

$renderRow = function ($element) use ($validate, $renderElement) {
    if (method_exists($element, 'getElements')) {
        echo '<legend>' .  $this->formLabel($element) . '</legend>';

        $eles = $element->elementList();
        foreach ($eles['active'] as $ele) {
            $renderElement($ele);
        }
    } else {
        $renderElement($element);
    }
};
/**#@-**/

if (!$groups) {
    foreach ($elements['active'] as $element) {
        $renderRow($element);
    }
} else {
    foreach ($groups as $group) {
    ?>
        <legend><?php echo _escape($group['label']); ?></legend>
        <?php
        foreach ($group['elements'] as $name) {
            $element = $form->get($name);
            $renderRow($element);
        }
    }
}

/**#@+
 * Add hidden elements
 */
foreach ($elements['hidden'] as $element) {
    echo $this->formElement($element);
}
/**#@-**/

if (!empty($elements['submit'])) {
    $submit = $this->formElement($elements['submit']);
    $cancel = !empty($elements['cancel']) ? $this->formElement($elements['cancel']) : '';
    $submitClass = $isMultiple ? 'col-md-offset-2 col-md-10' : 'col-sm-offset-3 col-lg-offset-2 col-md-4';
    echo sprintf(
        '<div class="form-group"><div class="%s">%s%s</div></div>',
        $submitClass,
        $submit,
        $cancel
    );
}

echo $this->form()->closeTag();
/*
?>

<script>
    $('[required="required"]').each(function() {
        var $this = $(this);
        var group = $this.parents('.form-group');
        var star = '<i class="text-danger" style="margin-right: 5px;">*</i>';

        if (!group.find('i.text-danger').length) {
            group.find('.control-label')
                .prepend(star);
        }
    });
</script>
*/